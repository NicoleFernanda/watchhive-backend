"""update columns media table

Revision ID: e6fc362dbbad
Revises: f3553a91b28a
Create Date: 2025-09-14 17:25:53.175433

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.engine.reflection import Inspector


# revision identifiers, used by Alembic.
revision: str = 'e6fc362dbbad'
down_revision: Union[str, Sequence[str], None] = 'f3553a91b28a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)

    columns = [c['name'] for c in inspector.get_columns('media')]

    # Verificar e renomear se existir a coluna errada
    if 'midia_type' in columns:
        op.alter_column('media', 'midia_type', new_column_name='media_type')

    if 'id_imdb' in columns:
        op.drop_column('media', 'id_imdb')
        op.add_column('media', sa.Column('id_imdb', sa.String(), nullable=False))

    if 'id_imdb' not in columns:
        op.add_column('media', sa.Column('id_imdb', sa.String(), nullable=False))

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)

    columns = [c['name'] for c in inspector.get_columns('media')]

    # Verificar e renomear se existir a coluna errada
    if 'media_type' in columns:
        op.alter_column('media', 'media_type', new_column_name='midia_type')

    # Adicionar id_imdb se n√£o existir
    if 'id_imdb' in columns:
        op.drop_column('media', 'id_imdb')
        op.add_column('media', sa.Column('id_imdb', sa.Integer(), nullable=False))
    # ### end Alembic commands ###
